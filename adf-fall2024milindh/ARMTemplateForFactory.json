{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-fall2024milindh"
		},
		"ls_Snowflake_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_Snowflake'"
		},
		"ls_Snowflake_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AZURE_TEST_DB"
		},
		"ls_stgblobdamg7370_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'ls_stgblobdamg7370'"
		},
		"ls_stgfall2024milindh_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgfall2024milindh.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadLoaction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "DI_Date_to_warehouse",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									},
									{
										"name": "DI_JOB_ID",
										"value": {
											"value": "@pipeline().parameters.DI_JOB_ID",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "state_fips",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state_fips",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "state_abbr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state_abbr",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "zipcode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "zipcode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "county",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "county",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DI_Date_to_warehouse",
											"type": "String"
										},
										"sink": {
											"name": "DI_Date_to_warehouse",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DI_JOB_ID",
											"type": "String"
										},
										"sink": {
											"name": "DI_JOB_ID",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_locationDim",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Location_Dim_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DI_JOB_ID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_locationDim')]",
				"[concat(variables('factoryId'), '/datasets/Location_Dim_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_tsv_2_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_2_Silver_As_Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "License Issue Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "License_Issue_Date",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "License Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "License_Number",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Animal's Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Animal_Name",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Species",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Species",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Primary Breed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Primary_Breed",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Secondary Breed",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Secondary_Breed",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ZIP Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZIP_Code",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_Seattle_Text_file",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "na",
									"FileName": "Seattle_Pet_Licenses.tsv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ParquetStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Parquet2StageTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_2_Silver_As_Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "DI_Created_Date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									},
									{
										"name": "DI_Job_ID",
										"value": {
											"value": "@pipeline().parameters.JobID",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "ls_stgblobdamg7370",
									"type": "LinkedServiceReference"
								},
								"path": "snowflake-staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "License_Issue_Date",
											"type": "String"
										},
										"sink": {
											"name": "LICENSE_ISSUE_DATE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "License_Number",
											"type": "String"
										},
										"sink": {
											"name": "LICENSE_NUMBER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Animal_Name",
											"type": "String"
										},
										"sink": {
											"name": "ANIMAL_S_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Species",
											"type": "String"
										},
										"sink": {
											"name": "SPECIES",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary_Breed",
											"type": "String"
										},
										"sink": {
											"name": "PRIMARY_BREED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Secondary_Breed",
											"type": "String"
										},
										"sink": {
											"name": "SECONDARY_BREED",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ZIP_Code",
											"type": "String"
										},
										"sink": {
											"name": "ZIP_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DI_Created_Date",
											"type": "String"
										},
										"sink": {
											"name": "DI_CREATED_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DI_Job_ID",
											"type": "String"
										},
										"sink": {
											"name": "DI_JOB_ID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_read_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_spl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Parquet2StageTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowLoadBreedDim",
								"type": "DataFlowReference",
								"parameters": {
									"DI_JOB_ID": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceSnowflakeStage": {},
									"sourceBreedDim": {},
									"sinkBreedDim": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Seattle_Text_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_ParquetStaging')]",
				"[concat(variables('factoryId'), '/datasets/ds_read_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_spl')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlowLoadBreedDim')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_stgblobdamg7370')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ParquetStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocationDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "LOCATION_SK",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ZIP",
						"type": "VARCHAR"
					},
					{
						"name": "CITY",
						"type": "VARCHAR"
					},
					{
						"name": "STATE",
						"type": "VARCHAR"
					},
					{
						"name": "DATE_TO_WAREHOUSE",
						"type": "DATE"
					},
					{
						"name": "DI_JOBID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "EDW",
					"table": "LOCATION_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Location_Dim_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "geo-data.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "state_fips",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "state_abbr",
						"type": "UTF8"
					},
					{
						"name": "zipcode",
						"type": "UTF8"
					},
					{
						"name": "county",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "DI_Date_to_warehouse",
						"type": "UTF8"
					},
					{
						"name": "DI_JOB_ID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StagelocationFromParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "ZIP_CODE",
						"type": "VARCHAR"
					},
					{
						"name": "DI_CREATED_DATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "DI_JOB_ID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "AZURE_DL",
					"table": "STG_LOCATION_SEATTLEPETLICENSES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgLocation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "ZIP_CODE",
						"type": "VARCHAR"
					},
					{
						"name": "DI_CREATED_DATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "DI_JOB_ID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "AZURE_DL",
					"table": "STG_LOCATION_SEATTLEPETLICENSES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Edw_Breed_Dim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "BREED_SK",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "PRIMARY_BREED_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "SECONDARY_BREED_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "SPECIES_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "DI_CREATED_DT",
						"type": "DATE"
					},
					{
						"name": "DI_JOB_ID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "EDW",
					"table": "BREED_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Seattle_Text_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "Seattle_Pet_Licenses.tsv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Seattle_Pet_Licenses.tsv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_edw_load_location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "LOCATION_SK",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "ZIP",
						"type": "VARCHAR"
					},
					{
						"name": "CITY",
						"type": "VARCHAR"
					},
					{
						"name": "STATE",
						"type": "VARCHAR"
					},
					{
						"name": "DATE_TO_WAREHOUSE",
						"type": "DATE"
					},
					{
						"name": "DI_JOBID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "EDW",
					"table": "LOCATION_DIM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_locationDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "geo-data.csv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "state_fips",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "state_abbr",
						"type": "String"
					},
					{
						"name": "zipcode",
						"type": "String"
					},
					{
						"name": "county",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_read_loaction_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "geo-data.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "state_fips",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "state_abbr",
						"type": "UTF8"
					},
					{
						"name": "zipcode",
						"type": "UTF8"
					},
					{
						"name": "county",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "DI_Date_to_warehouse",
						"type": "UTF8"
					},
					{
						"name": "DI_JOB_ID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_read_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stgfall2024milindh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Seattle_Pet_Licenses.parquet",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "License_Issue_Date",
						"type": "UTF8"
					},
					{
						"name": "License_Number",
						"type": "UTF8"
					},
					{
						"name": "Animal_Name",
						"type": "UTF8"
					},
					{
						"name": "Species",
						"type": "UTF8"
					},
					{
						"name": "Primary_Breed",
						"type": "UTF8"
					},
					{
						"name": "Secondary_Breed",
						"type": "UTF8"
					},
					{
						"name": "ZIP_Code",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stgfall2024milindh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_spl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_Snowflake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "LICENSE_ISSUE_DATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "LICENSE_NUMBER",
						"type": "VARCHAR"
					},
					{
						"name": "ANIMAL_S_NAME",
						"type": "VARCHAR"
					},
					{
						"name": "SPECIES",
						"type": "VARCHAR"
					},
					{
						"name": "PRIMARY_BREED",
						"type": "VARCHAR"
					},
					{
						"name": "SECONDARY_BREED",
						"type": "VARCHAR"
					},
					{
						"name": "ZIP_CODE",
						"type": "VARCHAR"
					},
					{
						"name": "DI_CREATED_DATE",
						"type": "TIMESTAMP_NTZ"
					},
					{
						"name": "DI_JOB_ID",
						"type": "VARCHAR"
					}
				],
				"typeProperties": {
					"schema": "AZURE_DL",
					"table": "STG_SEATTLEPETLICENSES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_Snowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_Snowflake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "re44181.canada-central.azure",
					"user": "milindhkashyap",
					"database": "[parameters('ls_Snowflake_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_Snowflake_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_stgblobdamg7370')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('ls_stgblobdamg7370_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_stgfall2024milindh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_stgfall2024milindh_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem-SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowLoadBreedDim')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_spl",
								"type": "DatasetReference"
							},
							"name": "SourceSnowflakeStage"
						},
						{
							"dataset": {
								"referenceName": "ds_Edw_Breed_Dim",
								"type": "DatasetReference"
							},
							"name": "sourceBreedDim",
							"description": "import data from ds_Edw_Breed_Dim"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_Edw_Breed_Dim",
								"type": "DatasetReference"
							},
							"name": "sinkBreedDim",
							"description": "Export data to ds_Edw_Breed_Dim"
						}
					],
					"transformations": [
						{
							"name": "SourceDataWithSK",
							"description": "Customer (cross) join on 'sourceStg' and 'sourceBreedDim'"
						},
						{
							"name": "aggregateBreedKeys",
							"description": "Aggregating data by 'SPECIES, PRIMARY_BREED, SECONDARY_BREED, MAXBREEDSK' producing columns"
						},
						{
							"name": "surrogateKey",
							"description": "Adding new key RowNum starting from 1 with step 1"
						},
						{
							"name": "DerivedColumns"
						}
					],
					"scriptLines": [
						"parameters{",
						"     DI_JOB_ID as string (\"59\")",
						"}",
						"source(output(",
						"          LICENSE_ISSUE_DATE as string,",
						"          LICENSE_NUMBER as string,",
						"          ANIMAL_S_NAME as string,",
						"          SPECIES as string,",
						"          PRIMARY_BREED as string,",
						"          SECONDARY_BREED as string,",
						"          ZIP_CODE as string,",
						"          DI_CREATED_DATE as string,",
						"          DI_JOB_ID as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     format: 'table') ~> SourceSnowflakeStage",
						"source(output(",
						"          MAXBREEDSK as decimal(10,0)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     query: 'SELECT NVL(MAX(BREED_SK), 0) as MaxBreedSK FROM EDW.BREED_DIM',",
						"     format: 'query') ~> sourceBreedDim",
						"SourceSnowflakeStage, sourceBreedDim join(1==1,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> SourceDataWithSK",
						"SourceDataWithSK aggregate(groupBy(SPECIES,",
						"          PRIMARY_BREED,",
						"          SECONDARY_BREED,",
						"          MAXBREEDSK),",
						"     COUNT_ROW = count(LICENSE_NUMBER)) ~> aggregateBreedKeys",
						"aggregateBreedKeys keyGenerate(output(RowNum as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey",
						"surrogateKey derive(BREED_SK = MAXBREEDSK + RowNum,",
						"          DI_CREATED_DT = toString(currentDate(), 'yyyy-MM-dd'),",
						"          DI_JOB_ID = $DI_JOB_ID) ~> DerivedColumns",
						"DerivedColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          BREED_SK as string,",
						"          PRIMARY_BREED_NAME as string,",
						"          SECONDARY_BREED_NAME as string,",
						"          SPECIES_NAME as string,",
						"          DI_CREATED_DT as string,",
						"          DI_JOB_ID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true,",
						"     mapColumn(",
						"          BREED_SK,",
						"          PRIMARY_BREED_NAME = PRIMARY_BREED,",
						"          SECONDARY_BREED_NAME = SECONDARY_BREED,",
						"          SPECIES_NAME = SPECIES,",
						"          DI_CREATED_DT,",
						"          DI_JOB_ID",
						"     )) ~> sinkBreedDim"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_spl')]",
				"[concat(variables('factoryId'), '/datasets/ds_Edw_Breed_Dim')]"
			]
		}
	]
}