{
	"name": "LoadLocation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_read_loaction_parquet",
						"type": "DatasetReference"
					},
					"name": "sourceParquet"
				},
				{
					"dataset": {
						"referenceName": "ds_edw_load_location",
						"type": "DatasetReference"
					},
					"name": "sourceLocationDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_edw_load_location",
						"type": "DatasetReference"
					},
					"name": "sinkLocationDim"
				}
			],
			"transformations": [
				{
					"name": "surrogateKeyLocationDim",
					"description": "Adding new key RowNum starting from 1 with step 1"
				},
				{
					"name": "SourceDataWithSK",
					"description": "Custom(cross) join on 'sourceParquet' and sourceLocationDim"
				},
				{
					"name": "aggregateLocationKeys"
				}
			],
			"scriptLines": [
				"source(output(",
				"          state_fips as string,",
				"          state as string,",
				"          state_abbr as string,",
				"          zipcode as string,",
				"          county as string,",
				"          city as string,",
				"          DI_Date_to_warehouse as string,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceParquet",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(LOCATION_SK), 0) as MaxLocationSK FROM EDW.LOCATION_DIM',",
				"     format: 'query') ~> sourceLocationDim",
				"aggregateLocationKeys keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeyLocationDim",
				"sourceParquet join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataWithSK",
				"SourceDataWithSK aggregate() ~> aggregateLocationKeys",
				"surrogateKeyLocationDim sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LOCATION_SK as string,",
				"          ZIP as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          DATE_TO_WAREHOUSE as string,",
				"          DI_JOBID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sinkLocationDim"
			]
		}
	}
}