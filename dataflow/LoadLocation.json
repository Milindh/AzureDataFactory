{
	"name": "LoadLocation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_read_loaction_parquet",
						"type": "DatasetReference"
					},
					"name": "sourceParquet"
				},
				{
					"dataset": {
						"referenceName": "ds_edw_load_location",
						"type": "DatasetReference"
					},
					"name": "sourceLocationDim"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SourceDataWithSK",
					"description": "Custom (cross) join on 'sourceParquet' and 'sourceLocationDim'"
				},
				{
					"name": "aggregateLocationKeys",
					"description": "Aggregate data by 'ZIP, CITY, STATE, MAXLOCATIONSK' producing columns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          state_fips as string,",
				"          state as string,",
				"          state_abbr as string,",
				"          zipcode as string,",
				"          county as string,",
				"          city as string,",
				"          DI_Date_to_warehouse as string,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceParquet",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(LOCATION_SK), 0) as MaxLocationSK FROM EDW.LOCATION_DIM',",
				"     format: 'query') ~> sourceLocationDim",
				"sourceParquet, sourceLocationDim join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataWithSK",
				"SourceDataWithSK aggregate(groupBy(zipcode,",
				"          city,",
				"          state,",
				"          {} = ERROR_FUNCTION('')),",
				"     COUNT_ROW = count(ZIPCODE)) ~> aggregateLocationKeys"
			]
		}
	}
}